/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.8 */

#ifndef PB_FULL_ENCODE_PB_H_INCLUDED
#define PB_FULL_ENCODE_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
typedef struct _ArmCommand {
    uint32_t mode;
    float q;
    float dq;
    float tau;
    float kp;
    float kd;
} ArmCommand;

typedef struct _LegCommand {
    uint32_t mode;
    float q;
    float dq;
    float tau;
    float kp;
    float kd;
} LegCommand;

typedef struct _LowLevelCmd {
    ArmCommand arm_motor1;
    ArmCommand arm_motor2;
    ArmCommand arm_motor3;
    ArmCommand arm_motor4;
    ArmCommand arm_motor5;
    ArmCommand arm_motor6;
    ArmCommand arm_motor7;
    ArmCommand arm_motor8;
    LegCommand leg_motor1;
    LegCommand leg_motor2;
    LegCommand leg_motor3;
    LegCommand leg_motor4;
    LegCommand leg_motor5;
    LegCommand leg_motor6;
    LegCommand leg_motor7;
    LegCommand leg_motor8;
    LegCommand leg_motor9;
    LegCommand leg_motor10;
    bool Calibration;
} LowLevelCmd;

typedef struct _ArmState {
    uint32_t mode;
    float q;
    float dq;
    float tauEst;
} ArmState;

typedef struct _LegState {
    uint32_t mode;
    float q;
    float dq;
    float tauEst;
    float temperature;
    float error;
} LegState;

typedef struct _IMUState {
    float GyroX;
    float GyroY;
    float GyroZ;
    float AccX;
    float AccY;
    float AccZ;
} IMUState;

typedef struct _LowLevelState {
    ArmState arm_motor1;
    ArmState arm_motor2;
    ArmState arm_motor3;
    ArmState arm_motor4;
    ArmState arm_motor5;
    ArmState arm_motor6;
    ArmState arm_motor7;
    ArmState arm_motor8;
    LegState leg_motor1;
    LegState leg_motor2;
    LegState leg_motor3;
    LegState leg_motor4;
    LegState leg_motor5;
    LegState leg_motor6;
    LegState leg_motor7;
    LegState leg_motor8;
    LegState leg_motor9;
    LegState leg_motor10;
    IMUState imu_1;
    uint32_t low_level_error_code;
} LowLevelState;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define ArmCommand_init_default                  {0, 0, 0, 0, 0, 0}
#define LegCommand_init_default                  {0, 0, 0, 0, 0, 0}
#define LowLevelCmd_init_default                 {ArmCommand_init_default, ArmCommand_init_default, ArmCommand_init_default, ArmCommand_init_default, ArmCommand_init_default, ArmCommand_init_default, ArmCommand_init_default, ArmCommand_init_default, LegCommand_init_default, LegCommand_init_default, LegCommand_init_default, LegCommand_init_default, LegCommand_init_default, LegCommand_init_default, LegCommand_init_default, LegCommand_init_default, LegCommand_init_default, LegCommand_init_default, 0}
#define ArmState_init_default                    {0, 0, 0, 0}
#define LegState_init_default                    {0, 0, 0, 0, 0, 0}
#define IMUState_init_default                    {0, 0, 0, 0, 0, 0}
#define LowLevelState_init_default               {ArmState_init_default, ArmState_init_default, ArmState_init_default, ArmState_init_default, ArmState_init_default, ArmState_init_default, ArmState_init_default, ArmState_init_default, LegState_init_default, LegState_init_default, LegState_init_default, LegState_init_default, LegState_init_default, LegState_init_default, LegState_init_default, LegState_init_default, LegState_init_default, LegState_init_default, IMUState_init_default, 0}
#define ArmCommand_init_zero                     {0, 0, 0, 0, 0, 0}
#define LegCommand_init_zero                     {0, 0, 0, 0, 0, 0}
#define LowLevelCmd_init_zero                    {ArmCommand_init_zero, ArmCommand_init_zero, ArmCommand_init_zero, ArmCommand_init_zero, ArmCommand_init_zero, ArmCommand_init_zero, ArmCommand_init_zero, ArmCommand_init_zero, LegCommand_init_zero, LegCommand_init_zero, LegCommand_init_zero, LegCommand_init_zero, LegCommand_init_zero, LegCommand_init_zero, LegCommand_init_zero, LegCommand_init_zero, LegCommand_init_zero, LegCommand_init_zero, 0}
#define ArmState_init_zero                       {0, 0, 0, 0}
#define LegState_init_zero                       {0, 0, 0, 0, 0, 0}
#define IMUState_init_zero                       {0, 0, 0, 0, 0, 0}
#define LowLevelState_init_zero                  {ArmState_init_zero, ArmState_init_zero, ArmState_init_zero, ArmState_init_zero, ArmState_init_zero, ArmState_init_zero, ArmState_init_zero, ArmState_init_zero, LegState_init_zero, LegState_init_zero, LegState_init_zero, LegState_init_zero, LegState_init_zero, LegState_init_zero, LegState_init_zero, LegState_init_zero, LegState_init_zero, LegState_init_zero, IMUState_init_zero, 0}

/* Field tags (for use in manual encoding/decoding) */
#define ArmCommand_mode_tag                      1
#define ArmCommand_q_tag                         2
#define ArmCommand_dq_tag                        3
#define ArmCommand_tau_tag                       4
#define ArmCommand_kp_tag                        5
#define ArmCommand_kd_tag                        6
#define LegCommand_mode_tag                      1
#define LegCommand_q_tag                         2
#define LegCommand_dq_tag                        3
#define LegCommand_tau_tag                       4
#define LegCommand_kp_tag                        5
#define LegCommand_kd_tag                        6
#define LowLevelCmd_arm_motor1_tag               1
#define LowLevelCmd_arm_motor2_tag               2
#define LowLevelCmd_arm_motor3_tag               3
#define LowLevelCmd_arm_motor4_tag               4
#define LowLevelCmd_arm_motor5_tag               5
#define LowLevelCmd_arm_motor6_tag               6
#define LowLevelCmd_arm_motor7_tag               7
#define LowLevelCmd_arm_motor8_tag               8
#define LowLevelCmd_leg_motor1_tag               9
#define LowLevelCmd_leg_motor2_tag               10
#define LowLevelCmd_leg_motor3_tag               11
#define LowLevelCmd_leg_motor4_tag               12
#define LowLevelCmd_leg_motor5_tag               13
#define LowLevelCmd_leg_motor6_tag               14
#define LowLevelCmd_leg_motor7_tag               15
#define LowLevelCmd_leg_motor8_tag               16
#define LowLevelCmd_leg_motor9_tag               17
#define LowLevelCmd_leg_motor10_tag              18
#define LowLevelCmd_Calibration_tag              19
#define ArmState_mode_tag                        1
#define ArmState_q_tag                           2
#define ArmState_dq_tag                          3
#define ArmState_tauEst_tag                      4
#define LegState_mode_tag                        1
#define LegState_q_tag                           2
#define LegState_dq_tag                          3
#define LegState_tauEst_tag                      4
#define LegState_temperature_tag                 5
#define LegState_error_tag                       6
#define IMUState_GyroX_tag                       1
#define IMUState_GyroY_tag                       2
#define IMUState_GyroZ_tag                       3
#define IMUState_AccX_tag                        4
#define IMUState_AccY_tag                        5
#define IMUState_AccZ_tag                        6
#define LowLevelState_arm_motor1_tag             1
#define LowLevelState_arm_motor2_tag             2
#define LowLevelState_arm_motor3_tag             3
#define LowLevelState_arm_motor4_tag             4
#define LowLevelState_arm_motor5_tag             5
#define LowLevelState_arm_motor6_tag             6
#define LowLevelState_arm_motor7_tag             7
#define LowLevelState_arm_motor8_tag             8
#define LowLevelState_leg_motor1_tag             9
#define LowLevelState_leg_motor2_tag             10
#define LowLevelState_leg_motor3_tag             11
#define LowLevelState_leg_motor4_tag             12
#define LowLevelState_leg_motor5_tag             13
#define LowLevelState_leg_motor6_tag             14
#define LowLevelState_leg_motor7_tag             15
#define LowLevelState_leg_motor8_tag             16
#define LowLevelState_leg_motor9_tag             17
#define LowLevelState_leg_motor10_tag            18
#define LowLevelState_imu_1_tag                  19
#define LowLevelState_low_level_error_code_tag   20

/* Struct field encoding specification for nanopb */
#define ArmCommand_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, UINT32,   mode,              1) \
X(a, STATIC,   REQUIRED, FLOAT,    q,                 2) \
X(a, STATIC,   REQUIRED, FLOAT,    dq,                3) \
X(a, STATIC,   REQUIRED, FLOAT,    tau,               4) \
X(a, STATIC,   REQUIRED, FLOAT,    kp,                5) \
X(a, STATIC,   REQUIRED, FLOAT,    kd,                6)
#define ArmCommand_CALLBACK NULL
#define ArmCommand_DEFAULT NULL

#define LegCommand_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, UINT32,   mode,              1) \
X(a, STATIC,   REQUIRED, FLOAT,    q,                 2) \
X(a, STATIC,   REQUIRED, FLOAT,    dq,                3) \
X(a, STATIC,   REQUIRED, FLOAT,    tau,               4) \
X(a, STATIC,   REQUIRED, FLOAT,    kp,                5) \
X(a, STATIC,   REQUIRED, FLOAT,    kd,                6)
#define LegCommand_CALLBACK NULL
#define LegCommand_DEFAULT NULL

#define LowLevelCmd_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, MESSAGE,  arm_motor1,        1) \
X(a, STATIC,   REQUIRED, MESSAGE,  arm_motor2,        2) \
X(a, STATIC,   REQUIRED, MESSAGE,  arm_motor3,        3) \
X(a, STATIC,   REQUIRED, MESSAGE,  arm_motor4,        4) \
X(a, STATIC,   REQUIRED, MESSAGE,  arm_motor5,        5) \
X(a, STATIC,   REQUIRED, MESSAGE,  arm_motor6,        6) \
X(a, STATIC,   REQUIRED, MESSAGE,  arm_motor7,        7) \
X(a, STATIC,   REQUIRED, MESSAGE,  arm_motor8,        8) \
X(a, STATIC,   REQUIRED, MESSAGE,  leg_motor1,        9) \
X(a, STATIC,   REQUIRED, MESSAGE,  leg_motor2,       10) \
X(a, STATIC,   REQUIRED, MESSAGE,  leg_motor3,       11) \
X(a, STATIC,   REQUIRED, MESSAGE,  leg_motor4,       12) \
X(a, STATIC,   REQUIRED, MESSAGE,  leg_motor5,       13) \
X(a, STATIC,   REQUIRED, MESSAGE,  leg_motor6,       14) \
X(a, STATIC,   REQUIRED, MESSAGE,  leg_motor7,       15) \
X(a, STATIC,   REQUIRED, MESSAGE,  leg_motor8,       16) \
X(a, STATIC,   REQUIRED, MESSAGE,  leg_motor9,       17) \
X(a, STATIC,   REQUIRED, MESSAGE,  leg_motor10,      18) \
X(a, STATIC,   REQUIRED, BOOL,     Calibration,      19)
#define LowLevelCmd_CALLBACK NULL
#define LowLevelCmd_DEFAULT NULL
#define LowLevelCmd_arm_motor1_MSGTYPE ArmCommand
#define LowLevelCmd_arm_motor2_MSGTYPE ArmCommand
#define LowLevelCmd_arm_motor3_MSGTYPE ArmCommand
#define LowLevelCmd_arm_motor4_MSGTYPE ArmCommand
#define LowLevelCmd_arm_motor5_MSGTYPE ArmCommand
#define LowLevelCmd_arm_motor6_MSGTYPE ArmCommand
#define LowLevelCmd_arm_motor7_MSGTYPE ArmCommand
#define LowLevelCmd_arm_motor8_MSGTYPE ArmCommand
#define LowLevelCmd_leg_motor1_MSGTYPE LegCommand
#define LowLevelCmd_leg_motor2_MSGTYPE LegCommand
#define LowLevelCmd_leg_motor3_MSGTYPE LegCommand
#define LowLevelCmd_leg_motor4_MSGTYPE LegCommand
#define LowLevelCmd_leg_motor5_MSGTYPE LegCommand
#define LowLevelCmd_leg_motor6_MSGTYPE LegCommand
#define LowLevelCmd_leg_motor7_MSGTYPE LegCommand
#define LowLevelCmd_leg_motor8_MSGTYPE LegCommand
#define LowLevelCmd_leg_motor9_MSGTYPE LegCommand
#define LowLevelCmd_leg_motor10_MSGTYPE LegCommand

#define ArmState_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, UINT32,   mode,              1) \
X(a, STATIC,   REQUIRED, FLOAT,    q,                 2) \
X(a, STATIC,   REQUIRED, FLOAT,    dq,                3) \
X(a, STATIC,   REQUIRED, FLOAT,    tauEst,            4)
#define ArmState_CALLBACK NULL
#define ArmState_DEFAULT NULL

#define LegState_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, UINT32,   mode,              1) \
X(a, STATIC,   REQUIRED, FLOAT,    q,                 2) \
X(a, STATIC,   REQUIRED, FLOAT,    dq,                3) \
X(a, STATIC,   REQUIRED, FLOAT,    tauEst,            4) \
X(a, STATIC,   REQUIRED, FLOAT,    temperature,       5) \
X(a, STATIC,   REQUIRED, FLOAT,    error,             6)
#define LegState_CALLBACK NULL
#define LegState_DEFAULT NULL

#define IMUState_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, FLOAT,    GyroX,             1) \
X(a, STATIC,   REQUIRED, FLOAT,    GyroY,             2) \
X(a, STATIC,   REQUIRED, FLOAT,    GyroZ,             3) \
X(a, STATIC,   REQUIRED, FLOAT,    AccX,              4) \
X(a, STATIC,   REQUIRED, FLOAT,    AccY,              5) \
X(a, STATIC,   REQUIRED, FLOAT,    AccZ,              6)
#define IMUState_CALLBACK NULL
#define IMUState_DEFAULT NULL

#define LowLevelState_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, MESSAGE,  arm_motor1,        1) \
X(a, STATIC,   REQUIRED, MESSAGE,  arm_motor2,        2) \
X(a, STATIC,   REQUIRED, MESSAGE,  arm_motor3,        3) \
X(a, STATIC,   REQUIRED, MESSAGE,  arm_motor4,        4) \
X(a, STATIC,   REQUIRED, MESSAGE,  arm_motor5,        5) \
X(a, STATIC,   REQUIRED, MESSAGE,  arm_motor6,        6) \
X(a, STATIC,   REQUIRED, MESSAGE,  arm_motor7,        7) \
X(a, STATIC,   REQUIRED, MESSAGE,  arm_motor8,        8) \
X(a, STATIC,   REQUIRED, MESSAGE,  leg_motor1,        9) \
X(a, STATIC,   REQUIRED, MESSAGE,  leg_motor2,       10) \
X(a, STATIC,   REQUIRED, MESSAGE,  leg_motor3,       11) \
X(a, STATIC,   REQUIRED, MESSAGE,  leg_motor4,       12) \
X(a, STATIC,   REQUIRED, MESSAGE,  leg_motor5,       13) \
X(a, STATIC,   REQUIRED, MESSAGE,  leg_motor6,       14) \
X(a, STATIC,   REQUIRED, MESSAGE,  leg_motor7,       15) \
X(a, STATIC,   REQUIRED, MESSAGE,  leg_motor8,       16) \
X(a, STATIC,   REQUIRED, MESSAGE,  leg_motor9,       17) \
X(a, STATIC,   REQUIRED, MESSAGE,  leg_motor10,      18) \
X(a, STATIC,   REQUIRED, MESSAGE,  imu_1,            19) \
X(a, STATIC,   REQUIRED, UINT32,   low_level_error_code,  20)
#define LowLevelState_CALLBACK NULL
#define LowLevelState_DEFAULT NULL
#define LowLevelState_arm_motor1_MSGTYPE ArmState
#define LowLevelState_arm_motor2_MSGTYPE ArmState
#define LowLevelState_arm_motor3_MSGTYPE ArmState
#define LowLevelState_arm_motor4_MSGTYPE ArmState
#define LowLevelState_arm_motor5_MSGTYPE ArmState
#define LowLevelState_arm_motor6_MSGTYPE ArmState
#define LowLevelState_arm_motor7_MSGTYPE ArmState
#define LowLevelState_arm_motor8_MSGTYPE ArmState
#define LowLevelState_leg_motor1_MSGTYPE LegState
#define LowLevelState_leg_motor2_MSGTYPE LegState
#define LowLevelState_leg_motor3_MSGTYPE LegState
#define LowLevelState_leg_motor4_MSGTYPE LegState
#define LowLevelState_leg_motor5_MSGTYPE LegState
#define LowLevelState_leg_motor6_MSGTYPE LegState
#define LowLevelState_leg_motor7_MSGTYPE LegState
#define LowLevelState_leg_motor8_MSGTYPE LegState
#define LowLevelState_leg_motor9_MSGTYPE LegState
#define LowLevelState_leg_motor10_MSGTYPE LegState
#define LowLevelState_imu_1_MSGTYPE IMUState

extern const pb_msgdesc_t ArmCommand_msg;
extern const pb_msgdesc_t LegCommand_msg;
extern const pb_msgdesc_t LowLevelCmd_msg;
extern const pb_msgdesc_t ArmState_msg;
extern const pb_msgdesc_t LegState_msg;
extern const pb_msgdesc_t IMUState_msg;
extern const pb_msgdesc_t LowLevelState_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define ArmCommand_fields &ArmCommand_msg
#define LegCommand_fields &LegCommand_msg
#define LowLevelCmd_fields &LowLevelCmd_msg
#define ArmState_fields &ArmState_msg
#define LegState_fields &LegState_msg
#define IMUState_fields &IMUState_msg
#define LowLevelState_fields &LowLevelState_msg

/* Maximum encoded size of messages (where known) */
#define ArmCommand_size                          31
#define ArmState_size                            21
#define FULL_ENCODE_PB_H_MAX_SIZE                LowLevelCmd_size
#define IMUState_size                            30
#define LegCommand_size                          31
#define LegState_size                            31
#define LowLevelCmd_size                         600
#define LowLevelState_size                       557

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
